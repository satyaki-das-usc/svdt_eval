import networkx as nx

from src.cpg_query import mu, can_follow

def double_free(nodes_dir: str, CPG: nx.DiGraph):
    V = CPG.nodes
    V_prime = [v for v in V if mu(nodes_dir, "type", v) == "AF"]

    for x in V_prime:
        b = mu(nodes_dir, "dest", x)
        dealloc_b = [v for v in V if mu(nodes_dir, "type", v) == "DF" and mu(nodes_dir, "dealloc_buff", v) == b]
        for v in dealloc_b:
            for u in dealloc_b:
                if not can_follow(CPG, u, v):
                    continue
                REALLOC_FLAG = False
                for w in V_prime:
                    if mu(nodes_dir, "dest", w) != b:
                        continue
                    if not can_follow(CPG, u, w):
                        continue
                    if not can_follow(CPG, w, v):
                        continue
                    REALLOC_FLAG = True
                    break
                if REALLOC_FLAG:
                    continue
                return "double_free", b, u, v
    
    return None, None, None, None

if __name__ == "__main__":
    pass